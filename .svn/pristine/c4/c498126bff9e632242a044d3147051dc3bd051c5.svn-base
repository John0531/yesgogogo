const path = require('path')
// 載入 prerender-spa-plugin
const PrerenderSPAPlugin = require('prerender-spa-plugin')
// 載入 PuppeteerRenderer
const Renderer = PrerenderSPAPlugin.PuppeteerRenderer

module.exports = {
  publicPath: process.env.NODE_ENV === 'production'
    ? '/'
    : '/',
  configureWebpack (config) {
    if (process.env.NODE_ENV === 'production') {
      config.plugins.push(
        // 創建實例
        new PrerenderSPAPlugin({
          staticDir: path.join(__dirname, 'dist'),
          routes: ['/'],
          renderer: new Renderer({
            renderAfterDocumentEvent: 'render-event'
          })
        })
      )
    }
  }
  /* css: {
    loaderOptions: {
      scss: {
        prependData: '@import "@/assets/scss/all.scss";'
      }
    }
  } */
  // filenameHashing: false
  // configureWebpack: config => {
  //   if (process.env.NODE_ENV === 'production') {
  //     config.output.filename = 'js/[name].min.js.[contenthash:1]'
  //     config.output.chunkFilename = 'js/[name].min.js.[contenthash:1]'
  //   } else {
  //     config.output.filename = 'js/[name].js'
  //     config.output.chunkFilename = 'js/[name].js'
  //   }
  // }
}
